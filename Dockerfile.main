# PropertyPilot Enhanced AgentCore Service - ARM64 Dockerfile
# Optimized for AWS Bedrock AgentCore with full observability and session management
FROM --platform=linux/arm64 python:3.11-slim-bookworm

WORKDIR /app

# Install system dependencies including ADOT for observability
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    wget \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Install AWS OTEL Collector for enhanced observability
RUN wget https://github.com/aws-observability/aws-otel-collector/releases/latest/download/aws-otel-collector_linux_arm64.deb \
    && dpkg -i aws-otel-collector_linux_arm64.deb || true \
    && rm aws-otel-collector_linux_arm64.deb

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Install additional AgentCore optimizations
RUN pip install --no-cache-dir \
    aws-opentelemetry-distro[otlp] \
    opentelemetry-instrumentation-fastapi \
    opentelemetry-instrumentation-boto3sqs \
    opentelemetry-instrumentation-requests \
    prometheus-client

# Copy application code
COPY property_pilot_agents.py .
COPY bedrock_deployment.py .
COPY agentcore_deployment.py .
COPY main.py .

# Set environment variables for AgentCore optimization
ENV PYTHONPATH=/app
ENV AWS_DEFAULT_REGION=us-east-1

# OpenTelemetry configuration for enhanced observability
ENV OTEL_SERVICE_NAME=propertypilot-main
ENV OTEL_SERVICE_VERSION=1.0.0
ENV OTEL_RESOURCE_ATTRIBUTES="service.name=propertypilot-main,service.version=1.0.0"
ENV OTEL_EXPORTER_OTLP_PROTOCOL=grpc
ENV OTEL_PYTHON_LOG_CORRELATION=true
ENV OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED=true

# AgentCore specific optimizations
ENV ENABLE_AGENTCORE_OBSERVABILITY=true
ENV SESSION_PERSISTENCE_ENABLED=true
ENV AUTO_SCALING_ENABLED=true
ENV MEMORY_OPTIMIZATION=true

# Performance optimizations
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV WORKERS=1
ENV MAX_REQUESTS=1000
ENV MAX_REQUESTS_JITTER=100

# Security enhancements
ENV PYTHONHASHSEED=random
ENV SECURE_HEADERS=true

# Expose port
EXPOSE 8080

# Enhanced health check with AgentCore integration
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:8080/ping || exit 1

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash app \
    && chown -R app:app /app
USER app

# Run with OpenTelemetry auto-instrumentation for full observability
CMD ["opentelemetry-instrument", "python", "main.py"]